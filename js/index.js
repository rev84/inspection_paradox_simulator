// Generated by CoffeeScript 1.12.7
var add, addLines, output, play, sim, start, timeFormat;

window.BORDER_WIDTH = 600;

window.RANK_COUNT = 5;

window.OUTPUT_FREQUENCY = 100;

window.average = 0;

window.count = 0;

window.timer = false;

window.bests = [];

window.worsts = [];

$().ready(function() {
  return $('#start').on('click', start);
});

start = function() {
  if (window.timer === false) {
    window.BUS_COUNT = Number($('#bus_count').val());
    window.TIME_MINUTES = 60 * Number($('#hour').val());
    window.timer = setInterval(play, 10);
    return $('#start').html('ストップ').removeClass('btn-primary').addClass('btn-warning');
  } else {
    clearInterval(window.timer);
    window.timer = false;
    return $('#start').html('スタート').addClass('btn-primary').removeClass('btn-warning');
  }
};

play = function() {
  add(sim());
  if (window.count % window.OUTPUT_FREQUENCY === 0) {
    return output();
  }
};

sim = function() {
  var buses, i, index, ref;
  buses = [];
  for (index = i = 0, ref = window.BUS_COUNT; 0 <= ref ? i < ref : i > ref; index = 0 <= ref ? ++i : --i) {
    buses.push(Math.random());
  }
  buses.sort();
  return buses;
};

add = function(buses) {
  var minutes;
  minutes = buses[0];
  window.average = (window.average * window.count + minutes) / (window.count + 1);
  window.count++;
  if (window.bests.length < window.RANK_COUNT) {
    window.bests.push(buses);
  } else if (window.bests[window.bests.length - 1][0] > minutes) {
    window.bests.push(buses);
    window.bests.sort(function(a, b) {
      return a[0] - b[0];
    });
    window.bests.pop();
  }
  if (window.worsts.length < window.RANK_COUNT) {
    return window.worsts.push(buses);
  } else if (window.worsts[window.worsts.length - 1][0] < minutes) {
    window.worsts.push(buses);
    window.worsts.sort(function(a, b) {
      return b[0] - a[0];
    });
    return window.worsts.pop();
  }
};

output = function() {
  $('#average').html(timeFormat(window.average * window.TIME_MINUTES) + ' / ' + window.count + '回');
  $('tbody').html('');
  $('tbody').append($('<th>').attr('colspan', '2').html('最短'));
  addLines(window.bests, true);
  $('tbody').append($('<th>').attr('colspan', '2').html('最長'));
  return addLines(window.worsts);
};

addLines = function(buseses, secondFloat) {
  var borderDiv, bus, buses, i, j, len, len1, results, td, tr;
  if (secondFloat == null) {
    secondFloat = false;
  }
  results = [];
  for (i = 0, len = buseses.length; i < len; i++) {
    buses = buseses[i];
    tr = $('<tr>');
    td = $('<td>');
    borderDiv = $('<div>').addClass('graph').css('width', window.BORDER_WIDTH);
    for (j = 0, len1 = buses.length; j < len1; j++) {
      bus = buses[j];
      $(borderDiv).append($('<span>').addClass('point').html('●').css('left', window.BORDER_WIDTH * bus));
    }
    td.append(borderDiv);
    tr.append(td);
    tr.append($('<td>').addClass('right').html(timeFormat(buses[0] * window.TIME_MINUTES, secondFloat)));
    results.push($('tbody').append(tr));
  }
  return results;
};

timeFormat = function(minutes, secondFloat) {
  var minute, res, second;
  if (secondFloat == null) {
    secondFloat = false;
  }
  minute = Math.floor(minutes);
  second = secondFloat ? sprintf('%.4f', (minutes % 1) * 60) : Math.floor((minutes % 1) * 60);
  res = '';
  if (minute > 0) {
    res += minute + '分';
  }
  return res += second + '秒';
};
